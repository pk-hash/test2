# Default values for project.
# This is a YAML-formatted file.
# Override these values per application deployment.

replicaCount: 2

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  create: true
  automount: true
  annotations: {}
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext:
  runAsNonRoot: true
  fsGroup: 1000

# Nginx container configuration
nginx:
  enabled: true
  image:
    repository: nginx
    pullPolicy: IfNotPresent
    tag: "1.27.0"
  
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsUser: 101
  
  service:
    port: 80
    targetPort: 80
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  livenessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /
      port: http
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # Nginx cache directories (required for read-only filesystem)
  cacheVolumes:
    enabled: true
    mounts:
      - name: nginx-cache
        mountPath: /var/cache/nginx
      - name: nginx-run
        mountPath: /var/run
  
  # Additional volumeMounts for nginx
  volumeMounts: []
  
  # Affinity for nginx pods
  affinity: {}

# NATS server configuration
nats:
  enabled: true
  replicaCount: 2  # Can be overridden independently
  
  image:
    repository: nats
    pullPolicy: IfNotPresent
    tag: "2.10.20-alpine"
  
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
      - ALL
    readOnlyRootFilesystem: true
    runAsUser: 1000
  
  service:
    client:
      port: 4222
      targetPort: 4222
    monitoring:
      port: 8222
      targetPort: 8222
  
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  livenessProbe:
    httpGet:
      path: /healthz
      port: monitoring
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /healthz
      port: monitoring
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 3
    failureThreshold: 3
  
  # NATS configuration
  config:
    enabled: false
    data: {}
      # nats.conf: |
      #   # Custom NATS config
  
  # Additional volumeMounts for NATS
  volumeMounts: []
  
  # Pod annotations for NATS
  podAnnotations: {}
  
  # Pod labels for NATS
  podLabels: {}
  
  # Affinity for NATS pods
  affinity: {}
  
  # Autoscaling for NATS (independent from nginx)
  autoscaling:
    enabled: false
    minReplicas: 2
    maxReplicas: 10
    targetCPUUtilizationPercentage: 80
    targetMemoryUtilizationPercentage: 80

ingress:
  enabled: false
  className: "nginx"
  annotations: {}
    # cert-manager.io/cluster-issuer: "letsencrypt-prod"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: Prefix
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 2
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

# Config map for custom configuration
configMap:
  enabled: false
  data: {}

# Additional volumes
volumes: []
# - name: cache
#   emptyDir: {}

# Global volumeMounts (applied to all containers)
volumeMounts: []

nodeSelector: {}

tolerations: []

affinity: {}
  # podAntiAffinity:
  #   preferredDuringSchedulingIgnoredDuringExecution:
  #   - weight: 100
  #     podAffinityTerm:
  #       labelSelector:
  #         matchExpressions:
  #         - key: app.kubernetes.io/name
  #           operator: In
  #           values:
  #           - project
  #       topologyKey: kubernetes.io/hostname
